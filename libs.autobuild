

#cmake_package 'communication/adrf' # Not part of the public stuff yet
#cmake_package 'simulation/mars-plugins/multisim_plugin' #where is it gone?!

def mars_package(srcDir)
    if Gem::Version.new(Autobuild::VERSION) <= Gem::Version.new('1.7.2')
        mars_path="simulation/mars/"
        cmake_package srcDir do |pkg|
            pkg.srcdir = mars_path
            pkg.post_import do
                pkg.srcdir = srcDir
                Autoproj.manifest.load_package_manifest(pkg.name)
            end
        end
    else
        cmake_package srcDir do |pkg|
            pkg.importdir = "simulation/mars/"
        end
    end
end


in_flavor 'master','next','stable' do
    mars_package("simulation/mars/common/lib_manager")

    mars_package("simulation/mars/common/cfg_manager")
    mars_package("simulation/mars/common/gui/main_gui")
    mars_package("simulation/mars/common/data_broker")
    mars_package("simulation/mars/common/gui/cfg_manager_gui")
    mars_package("simulation/mars/common/gui/lib_manager_gui")
    mars_package("simulation/mars/common/gui/log_console")
    mars_package("simulation/mars/common/gui/data_broker_gui")
    mars_package("simulation/mars/common/gui/data_broker_plotter")
    mars_package("simulation/mars/common/utils")
    mars_package("simulation/mars/interfaces")
    mars_package("simulation/mars/sim")
    mars_package("simulation/mars/gui")
    mars_package("simulation/mars/graphics")
    mars_package("simulation/mars/app")
    mars_package("simulation/mars/scene_loader")
    mars_package("simulation/mars/plugins/connexion_plugin")
    mars_package("simulation/mars/plugins/constraint_plugin")
end


in_flavor 'master','next','stable' do
    cmake_package 'external/minizip'
    autotools_package 'external/ode' do |pkg|
        pkg.depends_on 'libtool'
        pkg.depends_on 'automake'
        pkg.provides "pkgconfig/ode"
        pkg.configureflags <<
            "--enable-double-precision" <<
            "--disable-demos" <<
            "--enable-malloc" <<
            "--with-drawstuff=none" <<
            "CFLAGS=-fPIC -g -Wall" <<
            "CXXFLAGS=-fPIC -g -Wall"
    end

end
